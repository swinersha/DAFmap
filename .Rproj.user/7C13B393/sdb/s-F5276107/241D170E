{
    "collab_server" : "",
    "contents" : "\n# This is a script to calculate and produce a standardised set of forest threat\n# Maps\n#\n# Tom Swinfield\n# 17-03-08\n#\n\n# HEADER -----------------------------\n\nrm(list=ls())\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(maptools, rgdal, raster, splancs, rgeos, lubridate, dplyr, rmarkdown, broom)\n\n# These should be removed if pacman actually works.\nlibrary(maptools)\nlibrary(rgdal)\nlibrary(raster)\nlibrary(ggplot2)\nlibrary(splancs)\nlibrary(RColorBrewer)\nlibrary(rgeos)\nlibrary(lubridate)\nlibrary(dplyr)\nlibrary(rmarkdown)\nlibrary(tidyr)\n\nsapply(list.files(\"R/Functions\", \".R$\", full.names = TRUE), source, .GlobalEnv)\n\n\n# GLOBAL VARIABLES: ----\n\n# !!!! If you update the sectors in any way...\n# You must set sector_update to TRUE the next time the script is run !!!:\nSECTOR_UPDATE<-FALSE\n\nPATROL_DAYS_PER_YEAR<-250 # The total number of patrol days at each post.\nHOURS_PER_PATROL<-4\nPATROL_WEIGHT <- c(rendah=1, sedang=3, tinggi=6, extrim=12) \n# The weighting given to each threat level for calculating the patrol \n# effort necessary.\n\nsmart_path<-dirname(file.choose()) #   'data/SMART/2016' \n# The user should point to the folder which contains the appropriate data.\n#choose.dir() # Should work for windows  \n\n# Set the analysis period - this must match that in the folder selected above:\nanalysis_period<-choose_dates()\nperiod_days <- as.numeric(analysis_period$to_date-analysis_period$from_date)\nyear_prop<-1/(period_days/365)\n\n# Read in the patrol sector shapefile:\nsectors<-readOGR(\"data/shapefiles/Sektor patroli.shp\")\nsectors$Area<-sapply(sectors@polygons, function(x) x@area/10000) # The sector Areas in hectares\n# Ensure that all the sectors have an office:\nsectors@data$Kantor<-as.character(sectors@data$Kantor)\nsectors@data$Kantor[is.na(sectors@data$Kantor)]<-\"tanpa_kantor\"\nsectors@data$Kantor<-as.factor(sectors@data$Kantor)\n# This wouldn't be necessary if the shapefile was made properly.\n\n\n\n# DEFORESTATION GLAD data -----------------------------\n\nsource('R/Download GLAD.R') # The first time this runs it will take a little time as new data are downloaded.\n\n# Select the analysis period:\nglad_period<-glad_by_date(analysis_period$from_date, analysis_period$to_date, sectors)\n\n# Calculate deforestation within sectors:\n#sectors$df<-sapply(1:nrow(sectors), function(i) change_prop_calc(glad_period, sectors[i,]))\nsectors$df<-sector_df_assess(sectors, glad_period, sector_update = SECTOR_UPDATE) \n\n# Convert zeros to NAs:\nglad_period[glad_period==0]<-NA\n\n# Convert deforestation in the period to an annual % rate.\nsectors$df<-sectors$df * year_prop\n\n# Classifies the threats:\ndf_cut<-c(0,2,5,15,100)\nsectors$df_thrt<-thrt_classify(sectors$df, df_cut) \n\n\n\n# SMART -----------------------------\n\n# Read in the SMART effort data:\neffort_header<-names(read.csv(file.path(smart_path, \"Patrol_effort_by_sector_000054.csv\")))\neffort<-read.csv(paste(smart_path, \"/Patrol_effort_by_sector_000054.csv\", sep=''), skip=1, head=FALSE)\nnames(effort)<-effort_header \n# Calculate the effort:\neffort_hours<-effort$Number.of.Patrol.Hours[match(sectors$Sector,effort$X)]\neffort_hours[is.na(effort_hours)]<-0\nn_surveys<-effort$Number.of.Patrols[match(sectors$Sector,effort$X)]\nn_surveys[is.na(n_surveys)]<-0\n\n# Adds the patrol effort to the sectors data:\nsectors$effort_hours<-effort_hours\nsectors$n_surveys<-n_surveys\n\n# Read in the SMART threat data\nencr<-read.csv(file.path(smart_path, \"New_encroachment_observations_by_sector_000052.csv\"))\nlogg<-read.csv(file.path(smart_path, \"Illegal_logging_observations_by_sector_000051.csv\"))\nhunt<-read.csv(file.path(smart_path, \"Hunting_observations_by_sector_000050.csv\"))\n\n# Add the threat data to the sectors:\n# Threat observations:\nsectors$encr<-encr$Count.Observations.Ancaman[match(sectors$Sector,encr$X)]\nsectors$logg<-logg$Count.Observations.Ancaman[match(sectors$Sector,logg$X)]\nsectors$hunt<-hunt$Count.Observations.Ancaman[match(sectors$Sector,hunt$X)]\n\n# Convert NAs to 0s\nsectors$encr[is.na(sectors$encr)]<-0\nsectors$logg[is.na(sectors$logg)]<-0\nsectors$hunt[is.na(sectors$hunt)]<-0\n\n# Rates of threat detection:\nsectors$encr_effort<-sectors$encr/(effort_hours/100)\nsectors$logg_effort<-sectors$logg/(effort_hours/100)\nsectors$hunt_effort<-sectors$hunt/(effort_hours/100)\n\n# An insufficient patrol effort for assessment:\nsectors$no_survey<-effort_hours<4\n\n# Classifies the threats:\nobs_cut<-c(0,1,10,20,100)\nsectors$encr_thrt<-thrt_classify(sectors$encr_effort, obs_cut) \nsectors$logg_thrt<-thrt_classify(sectors$logg_effort, obs_cut)\nsectors$hunt_thrt<-thrt_classify(sectors$hunt_effort, obs_cut) \n\n\n# Make a spaial object for plotting sector labels: ----\nsectors_centroid<-gCentroid(sectors, byid = TRUE)\n\n\n# Plotting threats ----\n\n# The overall threat level map ----\n\n# Standardised Threat metric:\ntmp<-sectors@data[,c(\"encr_thrt\", \"logg_thrt\", \"hunt_thrt\", \"df_thrt\")]\nsectors$total_thrt <- apply(tmp, 1, function(x) greatest_thrt(x, levels = threat_labels))\n\n# Save the threats per sector as a PNG:\npng(filename = file.path(smart_path, \"Tingkat ancaman per sektor.png\"), \n    width = 400, height = 400, units = \"mm\", pointsize = 26,res=600)\npar(mfrow=c(2,2), mar=c(1,1,1,1), oma=c(2,0,0,0))\nplot(sectors,\n     col=col_pal_thrt(sectors$df, breaks=c(0,2,5,15,100)),\n     main='Pembukaan lahan')\nplot(glad_period, col=rgb(1,0.3,0,0.8), add=TRUE, legend=FALSE)\nplot(sectors,\n     col=col_pal_thrt(sectors$encr_effort, breaks=c(0,1,10,20,100), no_survey = sectors$no_survey),\n     main='Perambahan')\nplot(sectors,\n     col=col_pal_thrt(sectors$logg_effort, breaks=c(0,1,10,20,100), no_survey = sectors$no_survey),\n     main='Pembalakan illegal')\nplot(sectors,\n     col=col_pal_thrt(sectors$hunt_effort, breaks=c(0,1,10,20,100), no_survey = sectors$no_survey),\n     main='Perburuan')\n\nplot_reset()\nlegend(\"bottom\", \n       fill = c(brewer.pal(4, \"Blues\"), \"grey\"), \n       legend = c('Rendah', 'Sedang', 'Tinggi', 'Extrim', \"Patroli tidak cukup\"), \n       horiz=TRUE, text.width =  0.1, bty=\"n\")\ndev.off()\n\n# Save the total threats per sector as a PNG:\npng(\n  filename = file.path(smart_path, \"Tingkat ancaman total per sektor.png\"),\n  width = 400,\n  height = 400,\n  units = \"mm\",\n  pointsize = 26,\n  res = 600\n)\npar(\n  mfrow = c(1, 1),\n  mar = c(1, 1, 1, 1),\n  oma = c(2, 0, 0, 0)\n)\nplot(sectors,\n     col = col_pal_total_thrt(sectors$total_thrt),\n     main = 'Total')\ntext(sectors_centroid, labels = sectors$Code, cex = 0.5)\nplot_reset()\nlegend(\n  \"bottom\",\n  fill = brewer.pal(4, \"Blues\"),\n  legend = c('Rendah', 'Sedang', 'Tinggi', 'Extrim'),\n  horiz = TRUE,\n  bty = \"n\"\n)\ndev.off()\n\n# Assessing patrol effor relative to threats ----\n\n#================================================================================================\n# This might need to be deleted, after discussion with Pak Yusup.\n\n# Calculate the patrol days needed for each sector by setting the period by threat level: ----\n\n# \n# patrol_period <- c(60, 30, 10, 5)\n# sectors$patrol_period <- patrol_period[sectors$total_thrt]\n# sectors$patrol_period[sectors$Prioritas == \"Tidak prioritas\"] <-\n#   NA # Excludes non priority sectors\n# sectors$patrol_period[sectors$Type == \"Pos\"] <-\n#   NA # Excludes the posts\n# \n# \n# sector_effort <- sectors@data %>%\n#   filter(!is.na(patrol_period)) %>%\n#   group_by(Kantor) %>%\n#   summarise(\n#     n_sektor = length(total_thrt),\n#     n_rendah = sum(total_thrt == \"rendah\"),\n#     n_sedang = sum(total_thrt == \"sedang\"),\n#     n_tinggi = sum(total_thrt == \"tinggi\"),\n#     n_extrim = sum(total_thrt == \"extrim\"),\n#     hari_patroli_tahun = round(sum(365 / patrol_period))\n#   ) %>%\n#   mutate(\n#     jam_patroli_tahun = hari_patroli_tahun * 4,\n#     jumlah_tim = ceiling(hari_patroli_tahun / PATROL_DAYS_PER_YEAR),\n#     kapasitas_tim = round((\n#       hari_patroli_tahun / (PATROL_DAYS_PER_YEAR * jumlah_tim)\n#     ) * 100)\n#   )\n\n#================================================================================================\n\n# Calculate the patrol days needed for each sector by setting the threat level weighting: ----  \n\nsectors$patrol_weight<-PATROL_WEIGHT[sectors$total_thrt]\nsectors$patrol_weight[sectors$Prioritas==\"Tidak prioritas\"]<-NA # Excludes non priority sectors\nsectors$patrol_weight[sectors$Type==\"Pos\"]<-NA # Excludes the posts\n\n# Calculate the number of sectors at each threat level for each field office:\nsector_threat<-sectors@data %>% \n  filter(!is.na(patrol_weight)) %>%\n  group_by(Kantor) %>%\n  summarise(n_sektor = length(total_thrt),\n            n_rendah = sum(total_thrt==\"rendah\"),\n            n_sedang = sum(total_thrt==\"sedang\"),\n            n_tinggi = sum(total_thrt==\"tinggi\"),\n            n_extrim = sum(total_thrt==\"extrim\")\n  )\n\n# Calculate the patrol effort required:\nsector_effort<-sector_threat %>%\n  mutate(rendah_w = n_rendah*PATROL_WEIGHT[1],\n         sedang_w = n_sedang*PATROL_WEIGHT[2],\n         tinggi_w = n_tinggi*PATROL_WEIGHT[3],\n         extrim_w = n_extrim*PATROL_WEIGHT[4],\n         total_w = rendah_w+sedang_w+tinggi_w+extrim_w,\n         unit_w = PATROL_DAYS_PER_YEAR / total_w,\n         hari_rendah = round(unit_w*PATROL_WEIGHT[1],1),\n         hari_sedang = round(unit_w*PATROL_WEIGHT[2],1),\n         hari_tinggi = round(unit_w*PATROL_WEIGHT[3],1),\n         hari_extrim = round(unit_w*PATROL_WEIGHT[4],1),\n         periode_rendah = round(period_days/hari_rendah,1),\n         periode_sedang = round(period_days/hari_sedang,1),\n         periode_tinggi = round(period_days/hari_tinggi,1),\n         periode_extrim = round(period_days/hari_extrim,1)) %>%\n  select(Kantor, hari_rendah:periode_extrim)\n\n# Convert wide format to tidy format:\nsector_effort_tidy<-sector_effort %>% \n  tidyr::gather(thrt, score, hari_rendah:periode_extrim) %>%\n  tidyr::separate(thrt, into=c(\"type\", \"total_thrt\"), sep=\"_\") %>%\n  tidyr::spread(type,score)\n\n# !!! YOU NEED TO DO SOMETHING ABOUT TANPA KANTOR BECAUSE\n# AT THE MOMENT IT IS GIVEN KPIs BUT IN REALITY NO TEAM \n# IS ASSIGNED TO DO THE WORK.\n\n# Merge back into sectors:\n\n\n\nsectors_tmp<-merge(sectors@data, sector_effort_tidy, sort = FALSE)\ncode_ind<-match(sectors@data$Code, sectors_tmp$Code)\nsectors@data<-sectors_tmp[code_ind,]\n\nsectors$jam<-sectors$hari*HOURS_PER_PATROL # calculate the number of hours rquired.  \n#================================================================================================\n\n\n\n# Save the shapefile:\nwriteOGR(sectors, file.path(smart_path, \"ancaman_per_sektor.shp\"),\n         layer=\"ancaman_per_sektor\",\n         driver=\"ESRI Shapefile\", \n         overwrite_layer = TRUE)\n\n# Save the shapefile:\nwrite.csv(sectors@data, file.path(smart_path, \"ancaman_per_sektor.csv\"))\n\nknitr::opts_chunk$set(echo = FALSE, comment = NA) # Suppress code print out.\nrmarkdown::render(\"R/Report_gen.R\", output_file = file.path(smart_path, \"Laporan ancaman.html\")) # Change this to be correct.\n",
    "created" : 1492056907588.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4018125856",
    "id" : "241D170E",
    "lastKnownWriteTime" : 1498234889,
    "last_content_update" : 1498234889983,
    "path" : "~/Documents/Work/R projects/DAFmap/R/Sector threats.R",
    "project_path" : "R/Sector threats.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}